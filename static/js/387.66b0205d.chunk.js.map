{"version":3,"file":"static/js/387.66b0205d.chunk.js","mappings":"8PAEaA,EAAmBC,EAAAA,EAAAA,IAAH,8NAQhBC,EAAcD,EAAAA,EAAAA,GAAH,6CAGXE,EAAcF,EAAAA,EAAAA,GAAH,+EAKXG,EAAeH,EAAAA,EAAAA,GAAH,4GAMZI,EAAcJ,EAAAA,EAAAA,EAAH,kEAKXK,EAAgBL,EAAAA,EAAAA,EAAH,4H,kBCc1B,EA9BgB,WACd,OAAwCM,EAAAA,EAAAA,UAAS,MAAjD,eAAOC,EAAP,KAAqBC,EAArB,KACQC,GAAYC,EAAAA,EAAAA,MAAZD,QAMR,OAJAE,EAAAA,EAAAA,YAAU,YACRC,EAAAA,EAAAA,IAAkBH,GAASI,MAAK,SAAAC,GAAG,OAAIN,EAAgBM,QACtD,CAACL,KAGF,8BACGF,GACC,SAAC,KAAD,WACE,SAACR,EAAD,WACE,SAACE,EAAD,UACGM,EAAaQ,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,OAAQC,EAAf,EAAeA,QAAf,OAChB,UAAChB,EAAD,YACE,UAACC,EAAD,sBAAuBc,MACvB,SAACb,EAAD,UAAcc,MAFEF,aAS1B,SAACX,EAAD,uD,0MCnCRc,IAAAA,SAAAA,QAAyB,gCACzB,IAAMC,EAAM,mCAECC,EAAgB,mCAAG,oGACDF,IAAAA,IAAA,qCAAwCC,IADvC,cACxBE,EADwB,yBAEvBA,EAAeC,KAAKC,QAAQT,KAAI,kBAAiC,CACtEU,IADqC,EAAGC,YAExCV,GAFqC,EAAgBA,GAGrDW,MAHqC,EAAoBA,WAF7B,2CAAH,qDAShBC,EAAiB,mCAAG,WAAMC,GAAN,uFACJV,IAAAA,IAAA,+BACDC,EADC,kBACYS,IAFR,cACzBC,EADyB,yBAIxBA,EAAaP,KAAKC,QAAQT,KAAI,kBAAiC,CACpEU,IADmC,EAAGC,YAEtCV,GAFmC,EAAgBA,GAGnDW,MAHmC,EAAoBA,WAJ1B,2CAAH,sDAWjBI,EAAkB,mCAAG,WAAMf,GAAN,qGACJG,IAAAA,IAAA,gBAAmBH,EAAnB,oBAAiCI,IAD7B,cAC1BY,EAD0B,SAG9BA,EAAcT,KADRI,EAFwB,EAExBA,MAAOM,EAFiB,EAEjBA,OAAQC,EAFS,EAETA,SAAUR,EAFD,EAECA,YAAaS,EAFd,EAEcA,aAExCC,EAAY,CAChBT,MAAAA,EACAM,OAAAA,EACAC,SAAAA,EACAG,MAAOX,EACPY,MAAOH,GATuB,kBAYzBC,GAZyB,2CAAH,sDAelBG,EAAc,mCAAG,WAAMvB,GAAN,uFACJG,IAAAA,IAAA,gBAAmBH,EAAnB,4BAAyCI,IADrC,cACtBoB,EADsB,yBAErBA,EAAUjB,KAAKkB,KAAK1B,KAAI,kBAA4C,CACzEC,GAD6B,EAAGA,GAEhC0B,KAF6B,EAAOA,KAGpCL,MAH6B,EAAaM,aAI1CC,UAJ6B,EAA2BA,eAF9B,2CAAH,sDAUdhC,EAAiB,mCAAG,WAAMI,GAAN,uFACJG,IAAAA,IAAA,gBAAmBH,EAAnB,4BAAyCI,IADrC,cACzBb,EADyB,yBAExBA,EAAagB,KAAKC,QAAQT,KAAI,kBAA8B,CACjEC,GADmC,EAAGA,GAEtCC,OAFmC,EAAOA,OAG1CC,QAHmC,EAAeA,aAFrB,2CAAH","sources":["components/Reviews/Reviews.styled.jsx","components/Reviews/Reviews.jsx","services/api.js"],"sourcesContent":["import styled from '@emotion/styled';\n\nexport const ReviewsListWrapp = styled.div`\n  margin-top: 20px;\n  margin-bottom: 20px;\n  border: solid 2px #3f51b5;\n  padding: 20px;\n  box-shadow: 0 1px 1px rgb(0 0 0 / 12%), 0 4px 4px rgb(0 0 0 / 6%),\n    1px 4px 6px rgb(0 0 0 / 16%);\n`;\nexport const ReviewsList = styled.ul`\n  list-style: none;\n`;\nexport const ReviewsItem = styled.li`\n  &:not(:last-child) {\n    margin-bottom: 20px;\n  }\n`;\nexport const ReviewsTitle = styled.h2`\n  color: #3f51b5;\n  font-size: 24px;\n  font-weight: 700;\n  margin-bottom: 10px;\n`;\nexport const ReviewsText = styled.p`\n  font-size: 24px;\n  margin-left: 10px;\n`;\n\nexport const ReviewsNoText = styled.p`\n  color: #3f51b5;\n  font-size: 24px;\n  font-weight: 700;\n  margin: 20px;\n  text-align: center;\n`;\n","import { useState, useEffect } from 'react';\nimport { fetchMovieReviews } from 'services/api';\nimport { useParams } from 'react-router-dom';\nimport {\n  ReviewsListWrapp,\n  ReviewsList,\n  ReviewsItem,\n  ReviewsTitle,\n  ReviewsText,\n  ReviewsNoText,\n} from './Reviews.styled';\nimport { Container } from 'components/Header/Header.styled';\n\nconst Reviews = () => {\n  const [movieReviews, setMovieReviews] = useState(null);\n  const { movieId } = useParams();\n\n  useEffect(() => {\n    fetchMovieReviews(movieId).then(res => setMovieReviews(res));\n  }, [movieId]);\n\n  return (\n    <>\n      {movieReviews ? (\n        <Container>\n          <ReviewsListWrapp>\n            <ReviewsList>\n              {movieReviews.map(({ id, author, content }) => (\n                <ReviewsItem key={id}>\n                  <ReviewsTitle>Author: {author}</ReviewsTitle>\n                  <ReviewsText>{content}</ReviewsText>\n                </ReviewsItem>\n              ))}\n            </ReviewsList>\n          </ReviewsListWrapp>\n        </Container>\n      ) : (\n        <ReviewsNoText>We don't have reviews for this movie</ReviewsNoText>\n      )}\n    </>\n  );\n};\n\nexport default Reviews;\n","import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\nconst KEY = '092a845a33f61eebb0542bc73fc3415f';\n\nexport const fetchGetTrending = async () => {\n  const trendingMovies = await axios.get(`trending/movie/day?api_key=${KEY}`);\n  return trendingMovies.data.results.map(({ poster_path, id, title }) => ({\n    img: poster_path,\n    id,\n    title,\n  }));\n};\n\nexport const fetchSearchMovies = async query => {\n  const searchMovies = await axios.get(\n    `search/movie?api_key=${KEY}&query=${query}`\n  );\n  return searchMovies.data.results.map(({ poster_path, id, title }) => ({\n    img: poster_path,\n    id,\n    title,\n  }));\n};\n\nexport const fetchDetailsMovies = async id => {\n  const moviesDetails = await axios.get(`movie/${id}?api_key=${KEY}`);\n  const { title, genres, overview, poster_path, vote_average } =\n    moviesDetails.data;\n  const movieInfo = {\n    title,\n    genres,\n    overview,\n    image: poster_path,\n    score: vote_average,\n  };\n\n  return movieInfo;\n};\n\nexport const fetchMovieCast = async id => {\n  const movieCast = await axios.get(`movie/${id}/credits?api_key=${KEY}`);\n  return movieCast.data.cast.map(({ id, name, profile_path, character }) => ({\n    id,\n    name,\n    image: profile_path,\n    character,\n  }));\n};\n\nexport const fetchMovieReviews = async id => {\n  const movieReviews = await axios.get(`movie/${id}/reviews?api_key=${KEY}`);\n  return movieReviews.data.results.map(({ id, author, content }) => ({\n    id,\n    author,\n    content,\n  }));\n};\n"],"names":["ReviewsListWrapp","styled","ReviewsList","ReviewsItem","ReviewsTitle","ReviewsText","ReviewsNoText","useState","movieReviews","setMovieReviews","movieId","useParams","useEffect","fetchMovieReviews","then","res","map","id","author","content","axios","KEY","fetchGetTrending","trendingMovies","data","results","img","poster_path","title","fetchSearchMovies","query","searchMovies","fetchDetailsMovies","moviesDetails","genres","overview","vote_average","movieInfo","image","score","fetchMovieCast","movieCast","cast","name","profile_path","character"],"sourceRoot":""}