{"version":3,"file":"static/js/867.a81ffb00.chunk.js","mappings":"qOAGaA,EAAYC,EAAAA,EAAAA,GAAH,6SAWTC,EAAYD,EAAAA,EAAAA,IAAH,yCAGTE,EAAYF,EAAAA,EAAAA,EAAH,+HAQTG,GAAWH,EAAAA,EAAAA,GAAOI,EAAAA,GAAPJ,CAAH,kD,SCrBRK,EAAa,SAAC,GAAwB,IAAtBC,EAAqB,EAArBA,GAAIC,EAAiB,EAAjBA,IAAKC,EAAY,EAAZA,MAC9BC,GAAWC,EAAAA,EAAAA,MAEjB,OACE,SAACX,EAAD,WACE,UAACI,EAAD,CAAUQ,GAAE,kBAAaL,GAAMM,MAAO,CAAEC,KAAMJ,GAA9C,WACE,SAACR,EAAD,CAAWa,IAAI,QAAQC,IAAG,0CAAqCR,MAC/D,SAACL,EAAD,UAAYM,UCTPQ,EAAYhB,EAAAA,EAAAA,GAAH,uKCGTiB,EAAa,SAAC,GAAgB,IAAdC,EAAa,EAAbA,OAC3B,OACE,SAAC,KAAD,WACE,SAACF,EAAD,UACGE,EAAOC,KAAI,gBAAGb,EAAH,EAAGA,GAAIE,EAAP,EAAOA,MAAOD,EAAd,EAAcA,IAAd,OACV,SAACF,EAAD,CAAqBC,GAAIA,EAAIE,MAAOA,EAAOD,IAAKA,GAA/BD,Y,oKCPdc,EAAOpB,EAAAA,EAAAA,KAAH,2FAKJqB,EAAYrB,EAAAA,EAAAA,MAAH,+HAOTsB,EAAatB,EAAAA,EAAAA,OAAH,wGAKVuB,GAAYvB,EAAAA,EAAAA,GAAOwB,EAAAA,IAAPxB,CAAH,yE,SChBTyB,EAAe,SAAC,GAAe,IAAbC,EAAY,EAAZA,MAC7B,GAA+CC,EAAAA,EAAAA,MAAvCC,EAAR,EAAQA,SAAUC,EAAlB,EAAkBA,aAAcC,EAAhC,EAAgCA,WAOhC,OACE,SAAC,KAAD,WACE,UAACV,EAAD,CAAMW,SAAUF,GAPH,SAAAG,GACfN,EAAMM,EAAKC,MACXH,EAAW,WAKT,WACE,SAACT,GAAD,UAAeO,EAAS,WACxB,SAACN,EAAD,CAAYY,KAAK,SAAjB,UACE,SAACX,EAAD,Y,oBCoBV,EA/BmB,WAEjB,OAAwCY,EAAAA,EAAAA,UAAS,MAAjD,eAAOC,EAAP,KAAqBC,EAArB,KACA,GAAwCC,EAAAA,EAAAA,MAAxC,eAAOC,EAAP,KAAqBC,EAArB,KACMC,EAAcF,EAAaG,IAAI,SAmBrC,OAZAC,EAAAA,EAAAA,YAAU,WACY,OAAhBF,GAIgB,KAAhBA,IAIJG,EAAAA,EAAAA,IAAkBH,GAAaI,MAAK,SAAAC,GAAG,OAAIT,EAAgBS,QAC1D,CAACL,KAGF,iCACE,SAAChB,EAAD,CAAcC,MAnBG,SAAAO,GAEnBO,EAAgB,CAAEO,MAAOd,OAkBtBG,IAAgB,SAACnB,EAAA,EAAD,CAAYC,OAAQkB,S,0MC9B3CY,IAAAA,SAAAA,QAAyB,gCACzB,IAAMC,EAAM,mCAECC,EAAgB,mCAAG,oGACDF,IAAAA,IAAA,qCAAwCC,IADvC,cACxBE,EADwB,yBAEvBA,EAAenB,KAAKoB,QAAQjC,KAAI,kBAAiC,CACtEZ,IADqC,EAAG8C,YAExC/C,GAFqC,EAAgBA,GAGrDE,MAHqC,EAAoBA,WAF7B,2CAAH,qDAShBoC,EAAiB,mCAAG,WAAMG,GAAN,uFACJC,IAAAA,IAAA,+BACDC,EADC,kBACYF,IAFR,cACzBX,EADyB,yBAIxBA,EAAaJ,KAAKoB,QAAQjC,KAAI,kBAAiC,CACpEZ,IADmC,EAAG8C,YAEtC/C,GAFmC,EAAgBA,GAGnDE,MAHmC,EAAoBA,WAJ1B,2CAAH,sDAWjB8C,EAAkB,mCAAG,WAAMhD,GAAN,qGACJ0C,IAAAA,IAAA,gBAAmB1C,EAAnB,oBAAiC2C,IAD7B,cAC1BM,EAD0B,SAG9BA,EAAcvB,KADRxB,EAFwB,EAExBA,MAAOgD,EAFiB,EAEjBA,OAAQC,EAFS,EAETA,SAAUJ,EAFD,EAECA,YAAaK,EAFd,EAEcA,aAExCC,EAAY,CAChBnD,MAAAA,EACAgD,OAAAA,EACAC,SAAAA,EACAG,MAAOP,EACPQ,MAAOH,GATuB,kBAYzBC,GAZyB,2CAAH,sDAelBG,EAAc,mCAAG,WAAMxD,GAAN,uFACJ0C,IAAAA,IAAA,gBAAmB1C,EAAnB,4BAAyC2C,IADrC,cACtBc,EADsB,yBAErBA,EAAU/B,KAAKgC,KAAK7C,KAAI,kBAA4C,CACzEb,GAD6B,EAAGA,GAEhC2B,KAF6B,EAAOA,KAGpC2B,MAH6B,EAAaK,aAI1CC,UAJ6B,EAA2BA,eAF9B,2CAAH,sDAUdC,EAAiB,mCAAG,WAAM7D,GAAN,uFACJ0C,IAAAA,IAAA,gBAAmB1C,EAAnB,4BAAyC2C,IADrC,cACzBmB,EADyB,yBAExBA,EAAapC,KAAKoB,QAAQjC,KAAI,kBAA8B,CACjEb,GADmC,EAAGA,GAEtC+D,OAFmC,EAAOA,OAG1CC,QAHmC,EAAeA,aAFrB,2CAAH","sources":["components/MoviesItem/MoviesItem.styled.jsx","components/MoviesItem/MoviesItem.jsx","components/MoviesList/MoviesList.styled.jsx","components/MoviesList/MoviesList.jsx","components/SearchMovies/SearchMovies.styled.jsx","components/SearchMovies/SearchMovies.jsx","pages/MoviesPage.jsx","services/api.js"],"sourcesContent":["import styled from '@emotion/styled';\nimport { Link } from 'react-router-dom';\n\nexport const FilmItems = styled.li`\n  margin-left: 20px;\n  margin-top: 20px;\n  flex-basis: calc(33% - 20px);\n  overflow: hidden;\n  border: 1px solid #eee;\n  border-radius: 5px;\n  box-shadow: 0 1px 1px rgb(0 0 0 / 12%), 0 4px 4px rgb(0 0 0 / 6%),\n    1px 4px 6px rgb(0 0 0 / 16%);\n  padding-bottom: 10px;\n`;\nexport const FilmImage = styled.img`\n  width: 400px;\n`;\nexport const FilmTitle = styled.p`\n  text-align: center;\n  font-size: 25px;\n  font-weight: 600;\n  margin-top: 5px;\n  color: #3f51b5;\n`;\n\nexport const FilmLink = styled(Link)`\n  text-decoration: none;\n`;\n","import { useLocation } from 'react-router-dom';\nimport { FilmItems, FilmImage, FilmTitle, FilmLink } from './MoviesItem.styled';\nimport PropTypes from 'prop-types';\n\nexport const MoviesItem = ({ id, img, title }) => {\n  const location = useLocation();\n\n  return (\n    <FilmItems>\n      <FilmLink to={`/movies/${id}`} state={{ from: location }}>\n        <FilmImage alt=\"title\" src={`https://image.tmdb.org/t/p/w500/${img}`} />\n        <FilmTitle>{title}</FilmTitle>\n      </FilmLink>\n    </FilmItems>\n  );\n};\n\nMoviesItem.propTypes = {\n  id: PropTypes.number.isRequired,\n  title: PropTypes.string.isRequired,\n  img: PropTypes.string.isRequired,\n};\n","import styled from '@emotion/styled';\n\nexport const FilmsList = styled.ul`\n  display: flex;\n  flex-wrap: wrap;\n  padding: 20px;\n  /* margin-left: -20px; */\n  margin-top: 20px;\n  width: 1200px;\n  margin: 0 auto;\n`;\n","import { Container } from 'components/Header/Header.styled';\nimport { MoviesItem } from 'components/MoviesItem/MoviesItem';\nimport { FilmsList } from './MoviesList.styled';\nimport PropTypes from 'prop-types';\n\nexport const MoviesList = ({ movies }) => {\n  return (\n    <Container>\n      <FilmsList>\n        {movies.map(({ id, title, img }) => (\n          <MoviesItem key={id} id={id} title={title} img={img} />\n        ))}\n      </FilmsList>\n    </Container>\n  );\n};\n\nMoviesList.propTypes = {\n  movies: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number.isRequired,\n      title: PropTypes.string.isRequired,\n      img: PropTypes.string.isRequired,\n    })\n  ).isRequired,\n};\n","import styled from '@emotion/styled';\nimport { FaSearch } from 'react-icons/fa';\n\nexport const Form = styled.form`\n  margin-top: 40px;\n  display: flex;\n  justify-content: center;\n`;\nexport const FormInput = styled.input`\n  width: 240px;\n  height: 40px;\n  border: solid 2px #3f51b5;\n  font-size: 20px;\n  color: #3f51b5;\n`;\nexport const FormButton = styled.button`\n  border: solid 2px #3f51b5;\n  background-color: #3f51b5;\n  cursor: pointer;\n`;\nexport const SearchSvg = styled(FaSearch)`\n  width: 22px;\n  height: 22px;\n  color: #fff;\n`;\n","import { Container } from 'components/Header/Header.styled';\nimport { useForm } from 'react-hook-form';\nimport { Form, FormButton, FormInput, SearchSvg } from './SearchMovies.styled';\n\nexport const SearchMovies = ({ onSub }) => {\n  const { register, handleSubmit, resetField } = useForm();\n\n  const onSubmit = data => {\n    onSub(data.name);\n    resetField('name');\n  };\n\n  return (\n    <Container>\n      <Form onSubmit={handleSubmit(onSubmit)}>\n        <FormInput {...register('name')} />\n        <FormButton type=\"submit\">\n          <SearchSvg />\n        </FormButton>\n      </Form>\n    </Container>\n  );\n};\n","import { useState, useEffect } from 'react';\nimport { useSearchParams } from 'react-router-dom';\nimport { SearchMovies } from 'components/SearchMovies/SearchMovies';\nimport { fetchSearchMovies } from 'services/api';\nimport { MoviesList } from 'components/MoviesList/MoviesList';\n\nconst MoviesPage = () => {\n  // const [searchName, setSearchName] = useState('');\n  const [searchMovies, setSearchMovies] = useState(null);\n  const [searchParams, setSearchParams] = useSearchParams();\n  const searchQuery = searchParams.get('query');\n\n  const onSearchName = name => {\n    // setSearchName(name);\n    setSearchParams({ query: name });\n  };\n\n  useEffect(() => {\n    if (searchQuery === null) {\n      return;\n    }\n\n    if (searchQuery === '') {\n      return;\n    }\n\n    fetchSearchMovies(searchQuery).then(res => setSearchMovies(res));\n  }, [searchQuery]);\n\n  return (\n    <>\n      <SearchMovies onSub={onSearchName} />\n      {searchMovies && <MoviesList movies={searchMovies} />}\n    </>\n  );\n};\n\nexport default MoviesPage;\n","import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\nconst KEY = '092a845a33f61eebb0542bc73fc3415f';\n\nexport const fetchGetTrending = async () => {\n  const trendingMovies = await axios.get(`trending/movie/day?api_key=${KEY}`);\n  return trendingMovies.data.results.map(({ poster_path, id, title }) => ({\n    img: poster_path,\n    id,\n    title,\n  }));\n};\n\nexport const fetchSearchMovies = async query => {\n  const searchMovies = await axios.get(\n    `search/movie?api_key=${KEY}&query=${query}`\n  );\n  return searchMovies.data.results.map(({ poster_path, id, title }) => ({\n    img: poster_path,\n    id,\n    title,\n  }));\n};\n\nexport const fetchDetailsMovies = async id => {\n  const moviesDetails = await axios.get(`movie/${id}?api_key=${KEY}`);\n  const { title, genres, overview, poster_path, vote_average } =\n    moviesDetails.data;\n  const movieInfo = {\n    title,\n    genres,\n    overview,\n    image: poster_path,\n    score: vote_average,\n  };\n\n  return movieInfo;\n};\n\nexport const fetchMovieCast = async id => {\n  const movieCast = await axios.get(`movie/${id}/credits?api_key=${KEY}`);\n  return movieCast.data.cast.map(({ id, name, profile_path, character }) => ({\n    id,\n    name,\n    image: profile_path,\n    character,\n  }));\n};\n\nexport const fetchMovieReviews = async id => {\n  const movieReviews = await axios.get(`movie/${id}/reviews?api_key=${KEY}`);\n  return movieReviews.data.results.map(({ id, author, content }) => ({\n    id,\n    author,\n    content,\n  }));\n};\n"],"names":["FilmItems","styled","FilmImage","FilmTitle","FilmLink","Link","MoviesItem","id","img","title","location","useLocation","to","state","from","alt","src","FilmsList","MoviesList","movies","map","Form","FormInput","FormButton","SearchSvg","FaSearch","SearchMovies","onSub","useForm","register","handleSubmit","resetField","onSubmit","data","name","type","useState","searchMovies","setSearchMovies","useSearchParams","searchParams","setSearchParams","searchQuery","get","useEffect","fetchSearchMovies","then","res","query","axios","KEY","fetchGetTrending","trendingMovies","results","poster_path","fetchDetailsMovies","moviesDetails","genres","overview","vote_average","movieInfo","image","score","fetchMovieCast","movieCast","cast","profile_path","character","fetchMovieReviews","movieReviews","author","content"],"sourceRoot":""}