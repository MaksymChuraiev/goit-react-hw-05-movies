{"version":3,"file":"static/js/983.2d920e8a.chunk.js","mappings":"qOAGaA,EAAYC,EAAAA,EAAAA,GAAH,6SAWTC,EAAYD,EAAAA,EAAAA,IAAH,yCAGTE,EAAYF,EAAAA,EAAAA,EAAH,+HAQTG,GAAWH,EAAAA,EAAAA,GAAOI,EAAAA,GAAPJ,CAAH,kD,SCrBRK,EAAa,SAAC,GAAwB,IAAtBC,EAAqB,EAArBA,GAAIC,EAAiB,EAAjBA,IAAKC,EAAY,EAAZA,MAC9BC,GAAWC,EAAAA,EAAAA,MAEjB,OACE,SAACX,EAAD,WACE,UAACI,EAAD,CAAUQ,GAAE,kBAAaL,GAAMM,MAAO,CAAEC,KAAMJ,GAA9C,WACE,SAACR,EAAD,CAAWa,IAAI,QAAQC,IAAG,0CAAqCR,MAC/D,SAACL,EAAD,UAAYM,UCTPQ,EAAYhB,EAAAA,EAAAA,GAAH,uKCGTiB,EAAa,SAAC,GAAgB,IAAdC,EAAa,EAAbA,OAC3B,OACE,SAAC,KAAD,WACE,SAACF,EAAD,UACGE,EAAOC,KAAI,gBAAGb,EAAH,EAAGA,GAAIE,EAAP,EAAOA,MAAOD,EAAd,EAAcA,IAAd,OACV,SAACF,EAAD,CAAqBC,GAAIA,EAAIE,MAAOA,EAAOD,IAAKA,GAA/BD,Y,0FCU3B,UAfiB,WACf,OAA2Bc,EAAAA,EAAAA,UAAS,IAApC,eAAOF,EAAP,KAAeG,EAAf,KAMA,OAJAC,EAAAA,EAAAA,YAAU,YACRC,EAAAA,EAAAA,MAAmBC,MAAK,SAAAC,GAAG,OAAIJ,EAASI,QACvC,KAGD,gCACGP,IAAU,SAAC,IAAD,CAAYA,OAAQA,KAC/B,SAAC,KAAD,S,0MCbNQ,IAAAA,SAAAA,QAAyB,gCACzB,IAAMC,EAAM,mCAECJ,EAAgB,mCAAG,oGACDG,IAAAA,IAAA,qCAAwCC,IADvC,cACxBC,EADwB,yBAEvBA,EAAeC,KAAKC,QAAQX,KAAI,kBAAiC,CACtEZ,IADqC,EAAGwB,YAExCzB,GAFqC,EAAgBA,GAGrDE,MAHqC,EAAoBA,WAF7B,2CAAH,qDAShBwB,EAAiB,mCAAG,WAAMC,GAAN,uFACJP,IAAAA,IAAA,+BACDC,EADC,kBACYM,IAFR,cACzBC,EADyB,yBAIxBA,EAAaL,KAAKC,QAAQX,KAAI,kBAAiC,CACpEZ,IADmC,EAAGwB,YAEtCzB,GAFmC,EAAgBA,GAGnDE,MAHmC,EAAoBA,WAJ1B,2CAAH,sDAWjB2B,EAAkB,mCAAG,WAAM7B,GAAN,qGACJoB,IAAAA,IAAA,gBAAmBpB,EAAnB,oBAAiCqB,IAD7B,cAC1BS,EAD0B,SAG9BA,EAAcP,KADRrB,EAFwB,EAExBA,MAAO6B,EAFiB,EAEjBA,OAAQC,EAFS,EAETA,SAAUP,EAFD,EAECA,YAAaQ,EAFd,EAEcA,aAExCC,EAAY,CAChBhC,MAAAA,EACA6B,OAAAA,EACAC,SAAAA,EACAG,MAAOV,EACPW,MAAOH,GATuB,kBAYzBC,GAZyB,2CAAH,sDAelBG,EAAc,mCAAG,WAAMrC,GAAN,uFACJoB,IAAAA,IAAA,gBAAmBpB,EAAnB,4BAAyCqB,IADrC,cACtBiB,EADsB,yBAErBA,EAAUf,KAAKgB,KAAK1B,KAAI,kBAA4C,CACzEb,GAD6B,EAAGA,GAEhCwC,KAF6B,EAAOA,KAGpCL,MAH6B,EAAaM,aAI1CC,UAJ6B,EAA2BA,eAF9B,2CAAH,sDAUdC,EAAiB,mCAAG,WAAM3C,GAAN,uFACJoB,IAAAA,IAAA,gBAAmBpB,EAAnB,4BAAyCqB,IADrC,cACzBuB,EADyB,yBAExBA,EAAarB,KAAKC,QAAQX,KAAI,kBAA8B,CACjEb,GADmC,EAAGA,GAEtC6C,OAFmC,EAAOA,OAG1CC,QAHmC,EAAeA,aAFrB,2CAAH","sources":["components/MoviesItem/MoviesItem.styled.jsx","components/MoviesItem/MoviesItem.jsx","components/MoviesList/MoviesList.styled.jsx","components/MoviesList/MoviesList.jsx","pages/HomePage.jsx","services/api.js"],"sourcesContent":["import styled from '@emotion/styled';\nimport { Link } from 'react-router-dom';\n\nexport const FilmItems = styled.li`\n  margin-left: 20px;\n  margin-top: 20px;\n  flex-basis: calc(33% - 20px);\n  overflow: hidden;\n  border: 1px solid #eee;\n  border-radius: 5px;\n  box-shadow: 0 1px 1px rgb(0 0 0 / 12%), 0 4px 4px rgb(0 0 0 / 6%),\n    1px 4px 6px rgb(0 0 0 / 16%);\n  padding-bottom: 10px;\n`;\nexport const FilmImage = styled.img`\n  width: 400px;\n`;\nexport const FilmTitle = styled.p`\n  text-align: center;\n  font-size: 25px;\n  font-weight: 600;\n  margin-top: 5px;\n  color: #3f51b5;\n`;\n\nexport const FilmLink = styled(Link)`\n  text-decoration: none;\n`;\n","import { useLocation } from 'react-router-dom';\nimport { FilmItems, FilmImage, FilmTitle, FilmLink } from './MoviesItem.styled';\nimport PropTypes from 'prop-types';\n\nexport const MoviesItem = ({ id, img, title }) => {\n  const location = useLocation();\n\n  return (\n    <FilmItems>\n      <FilmLink to={`/movies/${id}`} state={{ from: location }}>\n        <FilmImage alt=\"title\" src={`https://image.tmdb.org/t/p/w500/${img}`} />\n        <FilmTitle>{title}</FilmTitle>\n      </FilmLink>\n    </FilmItems>\n  );\n};\n\nMoviesItem.propTypes = {\n  id: PropTypes.number.isRequired,\n  title: PropTypes.string.isRequired,\n  img: PropTypes.string.isRequired,\n};\n","import styled from '@emotion/styled';\n\nexport const FilmsList = styled.ul`\n  display: flex;\n  flex-wrap: wrap;\n  padding: 20px;\n  /* margin-left: -20px; */\n  margin-top: 20px;\n  width: 1200px;\n  margin: 0 auto;\n`;\n","import { Container } from 'components/Header/Header.styled';\nimport { MoviesItem } from 'components/MoviesItem/MoviesItem';\nimport { FilmsList } from './MoviesList.styled';\nimport PropTypes from 'prop-types';\n\nexport const MoviesList = ({ movies }) => {\n  return (\n    <Container>\n      <FilmsList>\n        {movies.map(({ id, title, img }) => (\n          <MoviesItem key={id} id={id} title={title} img={img} />\n        ))}\n      </FilmsList>\n    </Container>\n  );\n};\n\nMoviesList.propTypes = {\n  movies: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number.isRequired,\n      title: PropTypes.string.isRequired,\n      img: PropTypes.string.isRequired,\n    })\n  ).isRequired,\n};\n","import { useState, useEffect } from 'react';\nimport { MoviesList } from 'components/MoviesList/MoviesList';\nimport { fetchGetTrending } from 'services/api';\nimport { Outlet } from 'react-router-dom';\n\nconst HomePage = () => {\n  const [movies, setMovie] = useState([]);\n\n  useEffect(() => {\n    fetchGetTrending().then(res => setMovie(res));\n  }, []);\n\n  return (\n    <>\n      {movies && <MoviesList movies={movies} />}\n      <Outlet />\n    </>\n  );\n};\n\nexport default HomePage;\n","import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\nconst KEY = '092a845a33f61eebb0542bc73fc3415f';\n\nexport const fetchGetTrending = async () => {\n  const trendingMovies = await axios.get(`trending/movie/day?api_key=${KEY}`);\n  return trendingMovies.data.results.map(({ poster_path, id, title }) => ({\n    img: poster_path,\n    id,\n    title,\n  }));\n};\n\nexport const fetchSearchMovies = async query => {\n  const searchMovies = await axios.get(\n    `search/movie?api_key=${KEY}&query=${query}`\n  );\n  return searchMovies.data.results.map(({ poster_path, id, title }) => ({\n    img: poster_path,\n    id,\n    title,\n  }));\n};\n\nexport const fetchDetailsMovies = async id => {\n  const moviesDetails = await axios.get(`movie/${id}?api_key=${KEY}`);\n  const { title, genres, overview, poster_path, vote_average } =\n    moviesDetails.data;\n  const movieInfo = {\n    title,\n    genres,\n    overview,\n    image: poster_path,\n    score: vote_average,\n  };\n\n  return movieInfo;\n};\n\nexport const fetchMovieCast = async id => {\n  const movieCast = await axios.get(`movie/${id}/credits?api_key=${KEY}`);\n  return movieCast.data.cast.map(({ id, name, profile_path, character }) => ({\n    id,\n    name,\n    image: profile_path,\n    character,\n  }));\n};\n\nexport const fetchMovieReviews = async id => {\n  const movieReviews = await axios.get(`movie/${id}/reviews?api_key=${KEY}`);\n  return movieReviews.data.results.map(({ id, author, content }) => ({\n    id,\n    author,\n    content,\n  }));\n};\n"],"names":["FilmItems","styled","FilmImage","FilmTitle","FilmLink","Link","MoviesItem","id","img","title","location","useLocation","to","state","from","alt","src","FilmsList","MoviesList","movies","map","useState","setMovie","useEffect","fetchGetTrending","then","res","axios","KEY","trendingMovies","data","results","poster_path","fetchSearchMovies","query","searchMovies","fetchDetailsMovies","moviesDetails","genres","overview","vote_average","movieInfo","image","score","fetchMovieCast","movieCast","cast","name","profile_path","character","fetchMovieReviews","movieReviews","author","content"],"sourceRoot":""}