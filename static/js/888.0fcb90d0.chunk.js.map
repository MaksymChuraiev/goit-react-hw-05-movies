{"version":3,"file":"static/js/888.0fcb90d0.chunk.js","mappings":"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","sources":["components/MovieDetails/MovieDetails.styled.jsx","components/MovieDetails/MovieDetails.jsx","pages/MovieDetailsPage.jsx","services/api.js"],"sourcesContent":["import styled from '@emotion/styled';\nimport { FaArrowLeft } from 'react-icons/fa';\nimport { NavLink } from 'react-router-dom';\n\nexport const MovieWrapp = styled.div`\n  margin-top: 20px;\n  border: solid 2px #3f51b5;\n  display: flex;\n  padding: 20px;\n  box-shadow: 0 1px 1px rgb(0 0 0 / 12%), 0 4px 4px rgb(0 0 0 / 6%),\n    1px 4px 6px rgb(0 0 0 / 16%);\n`;\nexport const MovieImage = styled.img``;\nexport const MovieInfoWrapp = styled.div`\n  padding: 20px;\n`;\nexport const MovieTitle = styled.h2`\n  font-size: 40px;\n  color: #3f51b5;\n`;\nexport const MovieText = styled.p`\n  margin-top: 10px;\n  font-size: 24px;\n  margin-left: 10px;\n`;\nexport const MovieInfoTitle = styled.div`\n  margin-top: 20px;\n  font-size: 24px;\n  font-weight: 700;\n  color: #3f51b5;\n`;\nexport const MovieGenresWrapp = styled.div`\n  display: flex;\n`;\nexport const GoBackButton = styled.button`\n  width: 140px;\n  margin-top: 80px;\n  height: 40px;\n  background-color: #3f51b5;\n  border-color: #3f51b5;\n  color: #fff;\n  display: flex;\n  align-items: center;\n  font-size: 20px;\n  cursor: pointer;\n`;\n\nexport const GoBackIcon = styled(FaArrowLeft)`\n  width: 22px;\n  height: 22px;\n  margin-right: 10px;\n`;\n\nexport const MovieMoreInfo = styled.div`\n  margin-top: 20px;\n  border: solid 2px #3f51b5;\n  padding: 20px;\n  box-shadow: 0 1px 1px rgb(0 0 0 / 12%), 0 4px 4px rgb(0 0 0 / 6%),\n    1px 4px 6px rgb(0 0 0 / 16%);\n`;\nexport const MovieMoreInfoTitle = styled.h2`\n  font-size: 30px;\n  color: #3f51b5;\n`;\n\nexport const MovieInfoLinkWrapp = styled.div`\n  display: flex;\n  margin-top: 10px;\n`;\n\nexport const MovieInfoLink = styled(NavLink)`\n  width: 140px;\n  text-decoration: none;\n  height: 40px;\n  background-color: #3f51b5;\n  border-color: #3f51b5;\n  color: #fff;\n  font-size: 20px;\n  font-weight: 600;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  margin-left: 10px;\n`;\n","import { Container } from 'components/Header/Header.styled';\nimport { useLocation, useNavigate } from 'react-router-dom';\nimport { useEffect, useState } from 'react';\nimport * as Scroll from 'react-scroll';\nimport PropTypes from 'prop-types';\nimport {\n  MovieWrapp,\n  MovieImage,\n  MovieInfoWrapp,\n  MovieTitle,\n  MovieText,\n  MovieInfoTitle,\n  MovieGenresWrapp,\n  GoBackButton,\n  GoBackIcon,\n  MovieMoreInfo,\n  MovieMoreInfoTitle,\n  MovieInfoLink,\n  MovieInfoLinkWrapp,\n} from './MovieDetails.styled';\n\nexport const MovieDetails = ({ details }) => {\n  const [backLocation, setBackLocation] = useState(null);\n  const location = useLocation();\n  const navigate = useNavigate();\n\n  useEffect(() => {\n    if (backLocation === null) {\n      setBackLocation(location?.state?.from ?? '/');\n    }\n  }, [backLocation, location?.state?.from]);\n\n  const { title, genres, overview, image, score } = details;\n\n  const onGoBack = () => {\n    navigate(backLocation);\n  };\n\n  return (\n    <Container>\n      <MovieWrapp>\n        <MovieImage src={`https://image.tmdb.org/t/p/w500${image}`} />\n        <MovieInfoWrapp>\n          <MovieTitle>{title}</MovieTitle>\n          <MovieText>User Score: {score * 10}%</MovieText>\n          <MovieInfoTitle>Overview</MovieInfoTitle>\n          <MovieText>{overview}</MovieText>\n          <MovieInfoTitle>Genres</MovieInfoTitle>\n          <MovieGenresWrapp>\n            {genres.map(genre => (\n              <MovieText key={genre.id}>{genre.name}</MovieText>\n            ))}\n          </MovieGenresWrapp>\n          <GoBackButton type=\"button\" onClick={onGoBack}>\n            <GoBackIcon />\n            Go back\n          </GoBackButton>\n        </MovieInfoWrapp>\n      </MovieWrapp>\n      <MovieMoreInfo>\n        <MovieMoreInfoTitle>Additional information</MovieMoreInfoTitle>\n        <MovieInfoLinkWrapp>\n          <MovieInfoLink\n            onClick={() => Scroll.animateScroll.scrollMore(500)}\n            to=\"cast\"\n          >\n            Cast\n          </MovieInfoLink>\n          <MovieInfoLink\n            onClick={() => Scroll.animateScroll.scrollMore(500)}\n            to=\"reviews\"\n          >\n            Reviews\n          </MovieInfoLink>\n        </MovieInfoLinkWrapp>\n      </MovieMoreInfo>\n    </Container>\n  );\n};\n\nMovieDetails.propTypes = {\n  details: PropTypes.shape({\n    title: PropTypes.string.isRequired,\n    overview: PropTypes.string.isRequired,\n    image: PropTypes.string.isRequired,\n    score: PropTypes.number.isRequired,\n    genres: PropTypes.arrayOf(\n      PropTypes.shape({\n        id: PropTypes.number.isRequired,\n        name: PropTypes.string.isRequired,\n      })\n    ).isRequired,\n  }).isRequired,\n};\n","import { Outlet, useParams } from 'react-router-dom';\nimport { useState, useEffect } from 'react';\nimport { fetchDetailsMovies } from '../services/api.js';\nimport { MovieDetails } from 'components/MovieDetails/MovieDetails.jsx';\n\nconst MoviesDetailsPage = () => {\n  const [details, setDetails] = useState(null);\n  const { movieId } = useParams();\n\n  useEffect(() => {\n    fetchDetailsMovies(movieId).then(setDetails);\n  }, [movieId]);\n\n  return (\n    <>\n      {details && <MovieDetails details={details} />}\n      <Outlet />\n    </>\n  );\n};\n\nexport default MoviesDetailsPage;\n","import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\nconst KEY = '092a845a33f61eebb0542bc73fc3415f';\n\nexport const fetchGetTrending = async () => {\n  const trendingMovies = await axios.get(`trending/movie/day?api_key=${KEY}`);\n  return trendingMovies.data.results.map(({ poster_path, id, title }) => ({\n    img: poster_path,\n    id,\n    title,\n  }));\n};\n\nexport const fetchSearchMovies = async query => {\n  const searchMovies = await axios.get(\n    `search/movie?api_key=${KEY}&query=${query}`\n  );\n  return searchMovies.data.results.map(({ poster_path, id, title }) => ({\n    img: poster_path,\n    id,\n    title,\n  }));\n};\n\nexport const fetchDetailsMovies = async id => {\n  const moviesDetails = await axios.get(`movie/${id}?api_key=${KEY}`);\n  const { title, genres, overview, poster_path, vote_average } =\n    moviesDetails.data;\n  const movieInfo = {\n    title,\n    genres,\n    overview,\n    image: poster_path,\n    score: vote_average,\n  };\n\n  return movieInfo;\n};\n\nexport const fetchMovieCast = async id => {\n  const movieCast = await axios.get(`movie/${id}/credits?api_key=${KEY}`);\n  return movieCast.data.cast.map(({ id, name, profile_path, character }) => ({\n    id,\n    name,\n    image: profile_path,\n    character,\n  }));\n};\n\nexport const fetchMovieReviews = async id => {\n  const movieReviews = await axios.get(`movie/${id}/reviews?api_key=${KEY}`);\n  return movieReviews.data.results.map(({ id, author, content }) => ({\n    id,\n    author,\n    content,\n  }));\n};\n"],"names":["MovieWrapp","styled","MovieImage","MovieInfoWrapp","MovieTitle","MovieText","MovieInfoTitle","MovieGenresWrapp","GoBackButton","GoBackIcon","FaArrowLeft","MovieMoreInfo","MovieMoreInfoTitle","MovieInfoLinkWrapp","MovieInfoLink","NavLink","MovieDetails","details","useState","backLocation","setBackLocation","location","useLocation","navigate","useNavigate","useEffect","state","from","title","genres","overview","image","score","src","map","genre","name","id","type","onClick","Scroll","to","setDetails","movieId","useParams","fetchDetailsMovies","then","axios","KEY","fetchGetTrending","trendingMovies","data","results","img","poster_path","fetchSearchMovies","query","searchMovies","moviesDetails","vote_average","movieInfo","fetchMovieCast","movieCast","cast","profile_path","character","fetchMovieReviews","movieReviews","author","content"],"sourceRoot":""}